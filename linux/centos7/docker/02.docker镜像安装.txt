
-- mysql
    01.安装docker命令
        yum install docker
    02.拉取镜像
        docker pull mysql:5.7
    03.创建守护式容器
        docker run --name=a_mysql -p 3306:3306 -v/usr/local/apps/mysql:/usr/local/mysql -v /usr/local/apps/mysql/config:/usr/local/mysql/config -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7

-- tomcat
    01.拉取镜像
        docker pull tomcat:8.5-jre8
    02.创建守护式容器 (挂载目录webapps/logs)，（需要在webapps文件夹中配置tomcat的4个文件夹）
        docker run -di --name=a_tomcat -p 8080:8080 -v /usr/local/apps/tomcat/classes:/usr/local/tomcat/webapps/classes -v /usr/local/apps/tomcat/logs:/usr/local/tomcat/logs --privileged=true tomcat:8.5-jre8

-- redis
    01.拉取镜像
        docker pull redis:3.2
    02.创建守护式容器
        docker run -di --name=a_redis -p 6379:6379 -v /usr/local/apps/redis:/usr/local/redis --privileged=true redis:3.2

-- mongodb
    01.拉取镜像
        docker pull mongodb:4.0
    02.创建守护式容器
        docker run -di --name a_mongodb -v /usr/local/apps/mongodb:/usr/local/mongodb -p 27017:27017 mongodb:4.0
        -v后面的参数表示把数据文件挂载到宿主机的路径
        -p把mongo端口映射到宿主机的指定端口
        --auth表示连接mongodb需要授权

-- nginx
    01.拉取Nginx镜像
        docker pull nginx
    02.创建Nginx容器（-v目录挂载）
        docker run -di --name=a_nginx -p 80:80  nginx/bin/bash

-- elk的安装
    01.拉取Elasticsearch镜像
        docker pull sebp/elk
    02.创建Elasticsearch容器
        docker run -di -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -p 5601:5601 -p 5044:5044 -p 9200:9200 -p 9300:9300 --name a_elk sebp/elk

      {
        docker pull elasticsearch
        docker run -di -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -p 9200:9200 -p 9300:9300 --name b_elk elasticsearch
      }

-- 其中 -e ES_JAVA_OPTS="-Xms256m -Xmx256m"为设置elasticsearch的使用内存大小为256m，原本默认为2G，这里如果不配置，可能会启动出错。

   -p 9200:9200 -p 9300:9300 表示开放9200和9300端口

   --name ES01表示命名为ES01
   ---------------------
    --- 由于sebp/elk中logstash的input的方式默认是filebeat,首先们需要进入elk容器中修改input方式。logstash默认会将etc/logstash/conf.d/中的配置文件进行整合然后启动。
    03.#进入容器    (开启容器:docker start ecbe60716cd3)
        docker exec -it elk /bin/bash
    04.#进入修改目录
        cd etc/logstash/conf.d/

    --- 修改 02-beats-input.conf 文件，修改如下：
    input {
        tcp {
        port => 5044
        codec => json_lines
        }
    }
    output{
        elasticsearch {
        hosts => ["localhost:9200"]
        }
    }

    --- 保存后，我们使用 control + P + Q 退出容器。然后重启容器，让我们的配置生效。
        docker restart elk


---------------------------------------------------------------------------------------

    对于运行在后台的docker容器，我们经常需要做的事情是进入到容器中，
    docker为我们提供了docker exec 、docker attach 命令，并且还提供了nsenter工具，
    外部工具供我们使用。docker attach存在的问题是：当多个窗口同时attach到同一个容器时，
    所有的窗口都会同步的显示，假如其中的一个窗口发生阻塞时，其它的窗口也会阻塞，
    docker attach命令可以说是最不方便的进入后台docker容器的方法。
    docker exec命令是在docker 1.3之后增加的一个比docker attach命令更加方便的命令。
    和docker exec差不多方便的命令是nsenter工具。
--- nsenter安装

    $ cd /tmp;
    $ curl https://www.kernel.org/pub/linux/utils/util-linux/v2.24/util-linux-2.24.tar.gz | tar -zxf-; cd util-linux-2.24;
    $ ./configure  --without-ncurses
    $ make nsenter && sudo cp nsenter /usr/local/bin

--- nsenter使用
    在使用nsenter命令之前需要获取到docker容器的进程，然后再使用nsenter工具进去到docker容器中，具体的使用方法如下：

    #每一个容器都有.State.Pid，所以这个命令除了容器的id需要我们根据docker ps -a去查找，其他的全部为固定的格式
    $ docker inspect -f {{.State.Pid}} 容器名或者容器id
    $ nsenter --target 上面查到的进程id --mount --uts --ipc --net --pid  #输入该命令便进入到容器中

---------------------------------------------------------------------------------------




